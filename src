import tkinter as tk
from tkinter import messagebox

class HotelManagementSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Hotel Management System")

        # Initialize data structures
        self.rooms = {}
        self.guests = {}
        self.current_user = None

        # Create and place widgets
        self.label = tk.Label(root, text="Welcome to the Hotel Management System")
        self.label.pack()

        self.login_frame = tk.Frame(root)
        self.login_frame.pack()

        self.login_label = tk.Label(self.login_frame, text="Login")
        self.login_label.pack()

        self.username_label = tk.Label(self.login_frame, text="Username:")
        self.username_label.pack()
        self.username_entry = tk.Entry(self.login_frame)
        self.username_entry.pack()

        self.password_label = tk.Label(self.login_frame, text="Password:")
        self.password_label.pack()
        self.password_entry = tk.Entry(self.login_frame, show="*")
        self.password_entry.pack()

        self.login_button = tk.Button(self.login_frame, text="Login", command=self.login)
        self.login_button.pack()

        self.register_frame = tk.Frame(root)
        self.register_frame.pack()

        self.register_label = tk.Label(self.register_frame, text="Register")
        self.register_label.pack()

        self.new_username_label = tk.Label(self.register_frame, text="Username:")
        self.new_username_label.pack()
        self.new_username_entry = tk.Entry(self.register_frame)
        self.new_username_entry.pack()

        self.new_password_label = tk.Label(self.register_frame, text="Password:")
        self.new_password_label.pack()
        self.new_password_entry = tk.Entry(self.register_frame, show="*")
        self.new_password_entry.pack()

        self.register_button = tk.Button(self.register_frame, text="Register", command=self.register)
        self.register_button.pack()

        self.room_entry_label = tk.Label(root, text="Enter Room Number:")
        self.room_entry_label.pack()
        self.room_entry = tk.Entry(root)
        self.room_entry.pack()

        self.book_button = tk.Button(root, text="Book Room", command=self.book_room)
        self.book_button.pack()

        self.vacate_button = tk.Button(root, text="Vacate Room", command=self.vacate_room)
        self.vacate_button.pack()

        self.pay_button = tk.Button(root, text="Pay Amount", command=self.pay_amount)
        self.pay_button.pack()

    def login(self):
        username = self.username_entry.get()
        password = self.password_entry.get()

        if username in self.guests and self.guests[username] == password:
            self.current_user = username
            self.show_message(f"Logged in as {username}.")
            self.username_entry.delete(0, tk.END)
            self.password_entry.delete(0, tk.END)
            self.login_frame.pack_forget()
            self.register_frame.pack_forget()
            self.room_entry_label.pack()
            self.room_entry.pack()
            self.book_button.pack()
            self.vacate_button.pack()
            self.pay_button.pack()
        else:
            self.show_message("Invalid username or password.")

    def register(self):
        new_username = self.new_username_entry.get()
        new_password = self.new_password_entry.get()

        if new_username and new_password:
            if new_username not in self.guests:
                self.guests[new_username] = new_password
                self.show_message("Registration successful. You can now log in.")
                self.new_username_entry.delete(0, tk.END)
                self.new_password_entry.delete(0, tk.END)
            else:
                self.show_message("Username already exists. Please choose a different username.")
        else:
            self.show_message("Please enter a valid username and password.")

    def book_room(self):
        if not self.current_user:
            self.show_message("Please log in to book a room.")
            return

        room_number = self.room_entry.get()

        if room_number in self.rooms:
            self.show_message(f"Room {room_number} is already booked.")
        else:
            self.rooms[room_number] = self.current_user
            self.show_message(f"Room {room_number} booked successfully.")

    def vacate_room(self):
        if not self.current_user:
            self.show_message("Please log in to vacate a room.")
            return

        room_number = self.room_entry.get()

        if room_number in self.rooms and self.rooms[room_number] == self.current_user:
            self.rooms.pop(room_number)
            self.show_message(f"Room {room_number} vacated successfully.")
        else:
            self.show_message(f"Room {room_number} is not booked by you.")

    def pay_amount(self):
        if not self.current_user:
            self.show_message("Please log in to pay the amount.")
            return

        room_number = self.room_entry.get()

        if room_number in self.rooms and self.rooms[room_number] == self.current_user:
            # Perform payment processing here
            self.show_receipt(room_number)
        else:
            self.show_message(f"Room {room_number} is not booked by you.")

    def show_receipt(self, room_number):
        receipt = f"Hotel Management System\n\nReceipt\n\nRoom Number: {room_number}\nGuest: {self.rooms[room_number]}\nAmount Due: $100\n\nThank you for staying with us!"
        self.show_message(receipt)

    def show_message(self, message):
        messagebox.showinfo("Hotel Management System", message)


if __name__ == "__main__":
    root = tk.Tk()
    hotel_system = HotelManagementSystem(root)
    root.mainloop()
